!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("rxjs/Rx"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-azure-blob-service",["exports","@angular/core","@angular/common/http","rxjs/Rx","@angular/common"],t):t(e["angular-azure-blob-service"]={},e.ng.core,e.ng.common.http,e.Rx,e.ng.common)}(this,function(e,t,c,r,o){"use strict";var n=function(){function l(e){this.http=e}return l.prototype.generateBlobUrl=function(e,t,o,r){return void 0===o&&(o=!1),void 0===r&&(r=""),(o?r:"https://"+e.storageAccount+".blob.core.windows.net")+"/"+e.containerName+"/"+t},l.prototype.uploadFileInBlocks=function(e,t){if(!t.cancelled)if(0<t.totalBytesRemaining){var o=t.file.slice(t.currentFilePointer,t.currentFilePointer+t.maxBlockSize),r=t.blockIdPrefix+this.prependZeros(t.blockIds.length,6);t.blockIds.push(btoa(r)),e.readAsArrayBuffer(o),t.currentFilePointer+=t.maxBlockSize,t.totalBytesRemaining-=t.maxBlockSize,t.totalBytesRemaining<t.maxBlockSize&&(t.maxBlockSize=t.totalBytesRemaining)}else this.commitBlockList(t)},l.prototype.commitBlockList=function(t){for(var e=t.fileUrl+"&comp=blocklist",o=new c.HttpHeaders({"x-ms-blob-content-type":t.file.type}),r="<?xml version='1.0' encoding='utf-8'?><BlockList>",n=0;n<t.blockIds.length;n++)r+="<Latest>"+t.blockIds[n]+"</Latest>";r+="</BlockList>",this.http.put(e,r,{headers:o,responseType:"text"}).subscribe(function(e){t.complete&&t.complete()},function(e){console.log({error:e})})},l.prototype.initializeState=function(e){var t=l.DefaultBlockSize;e.blockSize&&(t=e.blockSize);var o=t,r=e.file,n=r.size;return n<t&&(o=n),{maxBlockSize:o,numberOfBlocks:n%o==0?n/o:n/o+1,totalBytesRemaining:n,currentFilePointer:0,blockIds:new Array,blockIdPrefix:"block-",bytesUploaded:0,submitUri:null,file:r,baseUrl:e.baseUrl,sasToken:e.sasToken,fileUrl:e.baseUrl+e.sasToken,progress:e.progress,complete:e.complete,error:e.error,cancelled:!1}},l.prototype.upload=function(e){var l=this,i=this.initializeState(e),a=new FileReader;return a.onloadend=function(e){if(2===e.target.readyState&&!i.cancelled){var t=i.fileUrl+"&comp=block&blockid="+i.blockIds[i.blockIds.length-1],o=e.target.result,r=new Uint8Array(e.target.result),n=new c.HttpHeaders({"x-ms-blob-type":"BlockBlob","Content-Type":"application/octet-stream"});l.http.put(t,o,{headers:n,responseType:"text"}).subscribe(function(e){i.bytesUploaded+=r.length;var t=Math.round(i.bytesUploaded/i.file.size*1e3)/10;i.progress&&i.progress(t),l.uploadFileInBlocks(a,i)},function(e){console.log({error:e})})}},this.uploadFileInBlocks(a,i),{cancel:function(){i.cancelled=!0}}},l.prototype.prependZeros=function(e,t){for(var o=""+e;o.length<t;)o="0"+o;return o},l.prototype.handleAngularJsonBug=function(e,t){var o=e.message.match(new RegExp("Http failure during parsing for","ig"));if((200===e.status||201===e.status)&&1===o.length)return r.Observable.empty();t()},l}();n.DefaultBlockSize=32768,n.decorators=[{type:t.Injectable}],n.ctorParameters=function(){return[{type:c.HttpClient}]};var l=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[n]}},e}();l.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,c.HttpClientModule],declarations:[],exports:[]}]}],l.ctorParameters=function(){return[]},e.BlobService=n,e.BlobModule=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-azure-blob-service.umd.min.js.map
